# python train.py --exp_name xxx --config_file defaults.yml --load_dataset results/data256.pkl --cuda_device 0

#result_dir: 'results'
#exp_name: 'exp_name'
lr_rampup_kimg: 50
G_lr_max: 0.001
D_lr_max: 0.001
total_kimg: 4000
#resume_network: ''
#resume_time: 0
num_data_workers: 3
#random_seed: 1337
#grad_lambda: 10.0
#iwass_epsilon: 0.001
#save_dataset: ''
#load_dataset: ''
loss_type: 'wgan_gp' # wgan_gp, wgan_ct, hinge
#mixup_alpha: null # or float (was 1.0 before)
#cuda_device: 0
validation_split: 0
#LAMBDA_2: 2
optimizer: 'adam' # adam, amsgrad, ttur
#config_file: null
#verbose: false

#Trainer.grad_clip: null #null or a float
#Trainer.D_training_repeats: 1
Trainer.tick_kimg_default: 5
#Trainer.resume_nimg: 0

#Generator.fmap_base: 2048
Generator.fmap_max: 256
Generator.fmap_min: 64
Generator.latent_size: 256
#Generator.upsample: 'nearest' #linear, nearest
#Generator.residual: false
Generator.normalization: 'weight_norm' #null, batch_norm, layer_norm, weight_norm
#Generator.normalize_latents: true
#Generator.pixelnorm: true
#Generator.activation: 'lrelu' #prelu, lrelu, relu, relu6, elu
Generator.dropout: 0.1
#Generator.do_mode: 'mul' #mul, drop, prop
#Generator.equalized: true
#Generator.spectral_norm: false
#Generator.ch_by_ch: false
Generator.kernel_size: 5

#Discriminator.fmap_base: 2048
Discriminator.fmap_max: 256
Discriminator.fmap_min: 64
#Discriminator.downsample: 'average' #average, stride
#Discriminator.residual: false
Discriminator.normalization: 'weight_norm' #null, batch_norm, layer_norm, weight_norm
#Discriminator.pixelnorm: false
#Discriminator.activation: 'lrelu'
#Discriminator.dropout: 0.1
#Discriminator.do_mode: 'mul'
#Discriminator.equalized: true
#Discriminator.spectral_norm: false
Discriminator.kernel_size: 5
#Discriminator.phase_shuffle: 0
#Discriminator.temporal_stats: false
#Discriminator.num_stat_channels: 1

#DepthManager.depth_offset: 0
DepthManager.minibatch_default: 64
DepthManager.minibatch_overrides: {6: 32, 7: 32, 8: 16}  # starts from depth_offset+1
DepthManager.tick_kimg_overrides: {4: 4, 5: 3, 6: 2, 7: 1, 8: 1}  # starts from depth_offset+1
DepthManager.lod_training_kimg: 400
DepthManager.lod_training_kimg_overrides: {1: 250, 2: 250, 3: 300, 4: 350}  # starts from depth_offset+1
DepthManager.lod_transition_kimg: 100
DepthManager.lod_transition_kimg_overrides: {1: 50, 2: 60, 3: 80, 4: 90}  # starts from depth_offset+1

#SaverPlugin.keep_old_checkpoints: true
#SaverPlugin.network_snapshot_ticks: 50

#OutputGenerator.samples_count: 8
#OutputGenerator.output_snapshot_ticks: 10

#GifGenerator.num_frames: 30
#GifGenerator.fps: 5

#Validator.output_snapshot_ticks: 20

#MyDataset.dir_path: './data/eeg'
#MyDataset.num_files: 860
MyDataset.seq_len: 1024
#MyDataset.stride: 0.5
#MyDataset.max_freq: 80
#MyDataset.num_channels: 5
#MyDataset.per_user: true
#MyDataset.use_abs: false
MyDataset.model_dataset_depth_offset: 4 # start from 4x4 instead of 1x1
